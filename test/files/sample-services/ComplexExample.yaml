swagger: '2.0'
info:
  description: |
    Este es un ejemplo complejo para Interoperabilidad 
  version: 0.0.1
  title: Servicio Complejo de Referencia
  contact:
    email: contacto@interoperabilidad.digital.gob.cl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
schemes:
  - http
host: complex-service-interop.herokuapp.com
basePath: /complex_example

paths:
  /personas:
    get:
      summary: Listado de personas
      operationId: peopleIndex
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/people'
    post:
      summary: Crear persona
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/newpeople'
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/people'
        "422":
          description: unprocessable entity
  /personas/{id}:
    delete:
      summary: Eliminando Personas
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Id de la persona a ser eliminada
      responses:
        "200":
          description: successful operation with no return

definitions:
  newpeople:
    type: object
    properties:
      persona:
        $ref: '#/definitions/formpeople'
  formpeople:
    type: object
    required:
      - nombres
      - apellidos
    properties:
      nombres:
        type: string
      apellidos:
        type: string
      telefonos_attributes:
        type: array
        items:
          $ref: '#/definitions/telefonoarray'
      email:
        type: string
        format: email        
  telefonoarray:
    type: object
    properties:
      numero:
        type: string
  nombreyapellido:
    type: object
    required:
      - nombres
      - apellidos
    properties:
      id:
        type: integer
      nombres:
        type: string
      apellidos:
        type: string
  telefono:
    type: number
    minimum: 111111
  datos:
    type: object
    properties:
      telefonos:
        type: array
        items:
          $ref: '#/definitions/telefono'
      email:
        type: string
        format: email
  people:
    type: object
    required:
      - persona
    properties:
      persona:
        $ref: '#/definitions/nombreyapellido'
      datos:
        $ref: '#/definitions/datos'
