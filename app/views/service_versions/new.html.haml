- if !user_signed_in?
  .alert.info
    .container
      %p
        #{t(:to_upload_a_service_please)}
        = link_to t(:identify_with_clave_unica), user_clave_unica_omniauth_authorize_path
- else
  =form_for([@organization, @service, @service_version]) do |f|
    - if @service_version.errors.any?
      .container-fluid.no-gutter{:class => "alert warning alert-dismissable fade in", :"data-alert" => "alert"}
        .row
          .container
            %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} Ã—
            %p= t(:cant_save_service_version_error, count: @service_version.errors.count)
            %ul
              - @service_version.errors.full_messages.each do |message|
                %li= message

    .new-agreement.main-container
      .container-fluid.main-title
        .container
          .row
            .col-md-12
              %h1
                = t(:new_version_for, name: @service.name)
                de
                = @organization.name
              %a{:href => "javascript:history.back();"}
                %i.material-icons
                  close
      .container-fluid
        .container
          .row.new-service-container
            .col-md-6
              %h4= t(:enter_new_service_file)
              .input-group.box-input-file
                .field
                  %input#input-file.form-control{:readonly => 'readonly', :type => 'text'}
                %label#label-file.input-group-btn
                  %span#select-file.btn= t(:select_file)
                  = f.file_field :spec_file, :style => 'display: none;', readonly: 'readonly'
              %span#remove-file
                %i.material-icons close
                %span=t(:remove_file)
            .col-md-6
              %h4= t(:enter_custom_mock_server)
              = f.text_field :custom_mock_service, { :class => "form-control input-lg", :placeholder => t(:custom_mock_service_example)}
          .row
            .col-md-6
              %h4= t(:service_versions_changelog)
              = f.text_area :changelog, { class: 'form-control', placeholder: t(:service_versions_changelog_placeholder), rows: 2, maxlength: 250}


          .row
            .col-md-6
              .text-left
                #check_box_xml
                = f.check_box :support_xml, style: "display: inline;", id: "input-checkbox-supports-xml"
                %label{for: "input-checkbox-supports-xml"}
                  =t(:supports_xml)

          .row
            .col-md-12
              .text-right
                = f.submit t(:upload_new_version), class: 'btn btn-primary btn-lg'
            %br
