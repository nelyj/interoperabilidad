- if !user_signed_in?
  .alert.info
    .container
      %p
        #{t(:to_upload_a_schema_please)}
        = link_to t(:identify_with_clave_unica), user_clave_unica_omniauth_authorize_path
- else
  = form_for @schema do |f|
    - if @schema.errors.any?
      .container-fluid.no-gutter{:class => "alert warning alert-dismissable fade in", :"data-alert" => "alert"}
        .row
          .container
            %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} ×
            %p= t(:cant_save_schema_error, count: @schema.errors.count)
            %ul
              - @schema.errors.full_messages.each do |message|
                %li= message
    .new-agreement.main-container
      .container-fluid.main-title
        .container
          .row
            .col-md-12
              %h1
                Creación de Nuevo Esquema
              %a{:href => "javascript:history.back();"}
                %i.material-icons
                  close

      .container-fluid
        .container
          .row.new-service-container
            .col-md-4
              %h4= t(:create_schema)
              .input-group.box-input-file
                .field
                  %input#input-file.form-control{:readonly => 'readonly', :type => 'text'}
                %label#label-file.input-group-btn
                  %span#select-file.btn= t(:choose_file)
                  = f.file_field :spec_file, :style => 'display: none;', readonly: 'readonly'
              %span#remove-file
                %i.material-icons{":aria-hidden" => true} close
                %span=t(:remove_file)

            .col-md-4
              %h4= t(:enter_new_schema_name)
              = f.text_field :name, { :class => "form-control input-lg", :placeholder => t(:schema_name_example)}
            .col-md-4
              %h4= t(:enter_new_schema_category)
              = f.collection_select 'schema_category_ids', SchemaCategory.all, :id, :name, {:include_blank => false}, {:class => 'form-control input-lg'}
              
            .col-md-4.col-md-pull-4
              %h4= t(:enter_new_schema_data_category)
              = f.select :data_category_ids, [], {}, {multiple: "multiple", class: "form-control", id: "tagPicker"} do 
                - DataCategory.all.each do |cat|
                  = content_tag(:option, cat.name, value: cat.id, selected: @schema.data_categories.pluck(:id).include?(cat.id))
  
          .row
            .col-md-12
              .text-right
                = f.submit t(:create_schema), class: 'btn btn-primary btn-lg', id: "create-schema"
